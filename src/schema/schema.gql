# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Comment {
  id: ID!
  ipAddress: Float
  user: User
  userId: String
  createdAt: DateTime!
  updatedAt: DateTime!
  post: Post!
  postId: String!
  authorRole: Role!
  content: String!
  likes: [String!]
  unLiked: [String!]
  spoiler: Boolean!
  spoilers: [String!]
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum Role {
  ANONYMOUS
  AUTHENTICATED
}

type PostCount {
  comments: Int!
}

type Post {
  id: ID!
  ipAddress: Float
  user: User
  userId: String
  createdAt: DateTime!
  updatedAt: DateTime!
  authorRole: Role!
  authorName: String!
  startTime: DateTime!
  airtime: DateTime!
  title: String!
  episode: Int
  category: Category!
  content: String
  participant: [String!]
  comments: [Comment!]
  keeped: [String!]
  public: Boolean!
  _count: PostCount!
}

enum Category {
  Anime
  Drama
  DramaMovie
  AnimeMovie
  TV
  Music
  Unknown
}

type Profile {
  id: ID!
  user: User!
  userId: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  favorite: [String!]
  twitterId: String
  img: String
  username: String!
}

type UserCount {
  posts: Int!
  comments: Int!
}

type User {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  posts: [Post!]
  comments: [Comment!]
  keepPost: [String!]
  profile: Profile
  follow: [String!]
  followed: [String!]
  deleted: Boolean!
  _count: UserCount!
}

type Query {
  users: [User!]!
  user: User!
  profile(userId: String!): Profile!
  posts: [Post!]!
  post(id: String!): Post!
  postsByUserId: [Post!]!
  keepPosts: [Post!]!
  followAndSelfPosts: [Post!]!
  comments(postId: String!): [Comment!]!
}

type Mutation {
  createUser(userInput: UserInput!): User!
  removeUser: User!
  follow(userUpdatefollowInput: UserUpdatefollowInput!): User!
  createProfile(createProfileInput: CreateProfileInput!): Profile!
  updateProfile(updateProfileInput: UpdateProfileInput!): Profile!
  createPost(createPostInput: CreatePostInput!): Post!
  updatePost(updatePostInput: UpdatePostInput!): Post!
  keep(postUpdatekeepedInput: PostUpdatekeepedInput!): Post!
  removePost(id: String!, userId: String!): Post!
  createComment(createCommentInput: CreateCommentInput!): Comment!
}

input UserInput {
  userId: String!
}

input UserUpdatefollowInput {
  userId: String!
  followingUserId: String!
}

input CreateProfileInput {
  userId: String!
  favorite: ProfileCreatefavoriteInput
  twitterId: String
  img: String
}

input ProfileCreatefavoriteInput {
  set: [String!]!
}

input UpdateProfileInput {
  userId: String!
  favorite: ProfileCreatefavoriteInput
  twitterId: String
  img: String
  username: String
}

input CreatePostInput {
  ipAddress: Float
  userId: String
  authorRole: Role
  authorName: String!
  startTime: DateTime
  airtime: DateTime
  title: String!
  episode: Int
  category: Category
  content: String
  public: Boolean
}

input UpdatePostInput {
  ipAddress: Float
  userId: String
  authorRole: Role
  authorName: String
  startTime: DateTime
  airtime: DateTime
  title: String
  episode: Int
  category: Category
  content: String
  public: Boolean
  id: ID!
}

input PostUpdatekeepedInput {
  postId: String!
}

input CreateCommentInput {
  ipAddress: Float
  userId: String
  postId: String!
  authorRole: Role
  content: String!
  likes: CommentCreatelikesInput
  unLiked: CommentCreateunLikedInput
  spoiler: Boolean
  spoilers: CommentCreatespoilersInput
}

input CommentCreatelikesInput {
  set: [String!]!
}

input CommentCreateunLikedInput {
  set: [String!]!
}

input CommentCreatespoilersInput {
  set: [String!]!
}